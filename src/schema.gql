# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreatePostInput {
  content: String
  title: String!
}

input CreateUserInput {
  email: String!
  name: String
  posts: [CreatePostInput!]
}

type Mutation {
  create_draft(authorEmail: String!, data: CreatePostInput!): Post!
  create_user(data: CreateUserInput!): User!
  delete_post(id: String!): Post
  increment_post_view(id: String!): Post!
  toggle_publish_post(id: String!): Post
}

"""A post created by a user"""
type Post {
  author: User
  content: String
  createdAt: Timestamp!
  id: String!
  published: Boolean
  title: String!
  updatedAt: Timestamp!

  """Number post count"""
  viewCount: Int!
}

input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}

type Query {
  all_users(skip: Int, take: Int): [User!]!
  drafts_by_user(userUniqueInput: UserUniqueInput!): [Post!]
  feed(orderBy: PostOrderByUpdatedAtInput, searchString: String, skip: Int, take: Int): [Post!]!
  post_by_id(id: String!): Post
}

enum SortOrder {
  asc
  desc
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""User system"""
type User {
  email: String!
  id: String!
  name: String
  posts: [Post!]
}

input UserUniqueInput {
  email: String
  id: String
}